initialize(){
	initializeMutationRate(1e-7);
	
	//Neutral Mutation m1 Beneficial Mutation m2
	initializeMutationType("m1",0.5,"f",0);
	initializeMutationType("m2",0.5,"f",0);
	
	//Initialize the particular TYPE of chromosomal region of interest (intron exon 		UTI etc
	initializeGenomicElementType("g1",c(m1,m2),c(rho,(1-rho)));
	
	//initialize the specific region of the genetic element defined above
	defineConstant("L", 99999); //number of sites
	initializeGenomicElement(g1, 0, L);
	
	//initialize the probability of crossover
	initializeRecombinationRate(1e-8);
	m1.convertToSubstitution=T;
	m2.convertToSubstitution=T;
	defineConstant("thres",7);
	defineConstant("selec",0.3);
	defineConstant("h2", 0.5); //heritability
	defineConstant("init_pop", 500); 
	defineConstant("mu", (1e-7)); //mutations per base position per generation
	defineConstant("gamma", log(rho / (1-rho)));
	defineConstant("s", gamma/ (4 * init_pop));
	defineConstant("envVar", sqrt(2 * L * 1e-7/s * (exp(gamma)- 1)/(exp(gamma)+1)*(1-h2)/h2));
	
}

//POPULATION EVENTS

//set ancestral population of 7,310
1 { sim.addSubpop("p1", 7310);
	file = paste(getSeed());
	writeFile("seed.txt", file, append=T);}

//populatiom expansion event 5920 generations ago
52080 { p1.setSubpopulationSize(14474);} 

//out of Africa split event 2040 generations ago tracking European population
55960 {p1.setSubpopulationSize(1861);}

//EU/AS split event 920 generations ago
57080 {p1.setSubpopulationSize(1032);}

//1st EU growth period 920 generations ago
57080:57795 {
t = sim.generation - 57080;
p1_size = round(1032 * exp(0.00307 * t));
p1.setSubpopulationSize(asInteger(p1_size));} 

//2nd EU growth period 205 generations ago
57795:58000 {
t = sim.generation - 57795;
p1_size = round(9268 * exp(0.0195 * t));
p1.setSubpopulationSize(asInteger(p1_size));} 



1:late() {

// sum the additive effects of QTLs
	inds = sim.subpopulations.individuals;
        posGenLi = asFloat(inds.countOfMutationsOfType(m1) + 
          sum(sim.substitutions.mutationType == m1));
        negGenLi = inds.countOfMutationsOfType(m2) +	       
          sum(sim.substitutions.mutationType == m2);
	genLi =  posGenLi - negGenLi;
	
// add in environmental variance, according to the target heritability
	env = rnorm(size(inds), 0.0, sqrt(envVar));
        liability = genLi + env;
        inds.tagF = liability;


        V_A = sd(genLi)^2;
        V_E = sd(env)^2;
        prev = sum(inds.tagF > thres)/size(inds);
        risk = (sum(inds.tagF > (thres - 1))/size(inds)) - prev;
        
    prevLine = paste(sim.generation + " " + prev + " " + risk);
	writeFile(prev_name, prevLine, append=T);
	
	varLine = paste(sim.generation + " " + V_A + " " + (V_A/(V_A + V_E)));
	writeFile(var_name, varLine, append=T);
	
	//sizeLine = paste(sim.generation + " " + size(inds));
	//writeFile("population_size.txt", sizeLine, append=T);	
} 


fitness(NULL){
	return 1.0 - selec * asFloat(individual.tagF>thres);
}


//End simulation at present day

58000 { sim.simulationFinished();}
